@use "sass:math";
@use "sass:map";

$icon-size: 24px;

@mixin sizes($map) {
  @each $size, $size-settings in $map {
    &-#{$size} {
      min-height: nth($size-settings, 1);
      padding: #{math.div(nth($size-settings, 1) - $icon-size - 2, 2)} nth($size-settings, 2);
      border-radius: nth($size-settings, 3);
    }
  }
}

.tgui-button {
  border: 1px solid transparent;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;

  &--base {
    gap: 12px;

    @include sizes((
      "sm": [38px, 12px, 8px],
      "md": [42px, 14px, 8px],
      "lg": [50px, 18px, 8px]
    ));
  }

  &--ios {
    gap: 10px;

    @include sizes((
      "sm": [36px, 12px, 12px],
      "md": [42px, 14px, 12px],
      "lg": [50px, 18px, 10px]
    ));
  }

  // Color modifiers.
  @each $type, $type-settings in (
    "fill": [#007AFF, white],
    "bezeled": [#4378FF1A, #007AFF],
    "plain": [transparent, #007AFF],
    "gray": [#0000000A, #000000CC],
    "outline": [transparent, #000000CC, #0000000D],
    "white": [white, #000000CC],
  ) {
    &--#{$type} {
      background-color: nth($type-settings, 1);
      color: nth($type-settings, 2);

      @if length($type-settings) > 2 {
        border-color: nth($type-settings, 3);
      }
    }
  }

  &--rounded {
    border-radius: 1000px;
  }

  &--full-width {
    width: 100%;
  }

  &__icon-container {
    width: $icon-size;
    height: $icon-size;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  &__icon {
    color: currentColor;
  }
}
